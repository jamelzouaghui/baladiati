<?php

namespace App\Controller;

use App\Entity\Depute;
use App\Entity\Presentation;
use App\Form\DeputeType;
use App\Form\PresentationType;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;

class DashboardController extends AbstractController {

    /**
     * @Route("/dashboard" , name="dashboard")
     * 
     */
    public function index(Request $request) {

   $em = $this->getDoctrine()->getManager();
  
   $presentation = $em->getRepository('App\Entity\Presentation')->findAll();
   $deputes = $em->getRepository('App\Entity\Depute')->findAll();
 
        return $this->render('presentation/index.html.twig', [
           'presentation'=> $presentation,
               'deputes'=> $deputes
        
                        ]
        );
    }
    
    
    
    /**
     * @Route("/add-presentation" , name="add-presentation")
     * 
     */
    public function addPresentation(Request $request) {
        $em = $this->getDoctrine()->getManager();
        $entity = new Presentation();
        $form = $this->createForm(PresentationType::class, $entity);
//test pour git init workflow

        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
           
            $em->persist($entity);
            $em->flush();
            $this->addFlash('success', 'presentation Créer! succées!');
            return $this->redirectToRoute('dashboard');
        }

        return $this->render('presentation/add-presentation.html.twig', [
                    'form' => $form->createView()
                        ]
        );
    }
     /**
     * @Route("/add-depute" , name="add-depute")
     * 
     */
    public function addDepute(Request $request) {
        $em = $this->getDoctrine()->getManager();
        $entity = new Depute();
        $form = $this->createForm(DeputeType::class, $entity);
//test pour git init workflow

        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
           $file = $form->get('photo')->getData();
           $filecv = $form->get('cv')->getData();
        
            if ($file) {
                $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
                $fileNamecv = $this->generateUniqueFileName() . '.' . $file->guessExtension();
                try {
                    $file->move($this->getParameter('users_directory'), $fileName);
                    $filecv->move($this->getParameter('users_directory'), $fileNamecv);
                } catch (FileException $e) {
                    
                }

                $entity->setPhoto($fileName);
                 $entity->setCv($fileNamecv);
            } 
            

            $em->persist($entity);
            $em->flush();
            $this->addFlash('success', 'deputé Créer! succées!');
            return $this->redirectToRoute('dashboard');
        }

        return $this->render('presentation/add-depute.html.twig', [
                    'form' => $form->createView()
                        ]
        );
    }
    
     /**
     * @return string
     */
    private function generateUniqueFileName() {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    
  
    
   

}
